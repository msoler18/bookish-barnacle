{%- liquid
  assign stickers = section.blocks | where: 'type', 'sticker'
  assign shape_dividers = section.blocks | where: 'type', 'shape_divider'
  assign background_shapes = section.blocks | where: 'type', 'background_shape'
  assign background_patterns = section.blocks | where: 'type', 'background_pattern'
  assign sidebar_width_desktop = section.settings.sidebar_width_desktop
  assign display_on_card = section.settings.display_on_card
  assign desktop_max_width = section.settings.desktop_max_width
  assign show_top_padding = section.settings.show_top_padding

  assign sidebar_present = false
  for block in section.blocks
    if block.type == 'ingredients' or block.type == 'featured-products'
      assign sidebar_present = true
    endif
  endfor

  if article.tags.size > 0 and section.settings.show_tags
    assign show_tags = true
  endif

  if section.settings.show_share_links
    assign show_share_links = true
  endif

  assign preload = false
  if section.index == 1
    assign preload = true
  endif

  assign loading = 'lazy'
  if section.index <= 3
    assign loading = 'eager'
  endif
-%}

<section
  class="recipe relative overflow-hidden bg-scheme-background text-scheme-text {% if section.settings.use_gradient_background %}bg-scheme-gradient{% endif %} mx-auto"
  data-color-scheme="{{ section.settings.color_scheme }}"
>
  <div class="section-content mx-auto w-full {{ desktop_max_width }} px-section">
    <div class="recipe__container flex flex-wrap {% if sidebar_present %}gap-theme{% endif %}">
      {% if sidebar_present %}
        <div class="recipe__ingredients-container z-10 flex grow flex-col gap-theme">
          {%- for block in section.blocks -%}
            {% unless block.type == 'sticker'
              or block.type == 'background_pattern'
              or block.type == 'background_shape'
              or block.type == 'shape_divider'
            %}
              {%- case block.type -%}
                {%- when 'ingredients' -%}
                  <div
                    class="{% if settings.card_shadow_direction contains 'top' %}pt-card-shadow{% else %}pb-card-shadow{% endif %}"
                    {{ block.shopify_attributes }}
                  >
                    {%- liquid
                      assign display_on_card = block.settings.display_on_card
                      assign ingredients_heading = block.settings.ingredients_heading
                      assign ingredients_content = block.settings.ingredients_content
                    -%}

                    <div
                      class="recipe__ingredients {% if display_on_card %}text-scheme-text card{% else %}w-4/5{% endif %} w-full self-center"
                      {{ block.shopify_attributes }}
                    >
                      <div class="{% if display_on_card %}card__surface{% endif %} relative z-10 p-5">
                        {%- if ingredients_heading != blank -%}
                          <h2 class="font-heading heading-secondary mb-5">
                            {{ ingredients_heading }}
                          </h2>
                        {%- endif -%}

                        {% if ingredients_content != blank %}
                          <div class="rte">
                            {{ ingredients_content }}
                          </div>
                        {% endif %}
                      </div>
                    </div>
                  </div>
                {%- when 'featured-products' -%}
                  <div
                    class="flex flex-col gap-y-2.5"
                    {{ block.shopify_attributes }}
                  >
                    {%- liquid
                      assign display_on_card = block.settings.display_on_card

                      assign shape_id = block.id

                      if settings.product_tile_media_shape == 'blob'
                        assign shape_id = block.id | append: '-' | append: forloop.index0
                      endif

                      assign enable_quick_buy = false

                      if block.settings.product_tile_style == 'mini'
                        assign shape = settings.product_tile_mini_media_shape
                        assign enable_quick_buy = block.settings.enable_quick_buy
                      else
                        assign shape = settings.product_tile_media_shape

                        if display_on_card
                          assign product_tile_sizes = '(min-width: 990px) 18rem, 100vw'
                        else
                          assign product_tile_sizes = '(min-width: 990px) calc(18rem - 2.5rem), calc(100vw - 2.5rem)'
                        endif
                      endif
                    -%}

                    {%- render 'collection-shape-defs',
                      shape: shape,
                      section_id: block.id,
                      item_count: 3
                    -%}

                    {% for i in (1..3) %}
                      {% assign product_key = 'product_' | append: i %}
                      {% assign product_value = block.settings[product_key] %}

                      {% if product_value != blank %}
                        <div class="recipe__featured-product z-10 {% if settings.card_shadow_direction contains 'top' %}pt-card-shadow{% else %}pb-card-shadow{% endif %}">
                          {%- if block.settings.product_tile_style == 'mini' -%}
                            {%- render 'product-tile-mini',
                              product: product_value,
                              shape_id: shape_id,
                              index: forloop.index0,
                              enable_quick_buy: enable_quick_buy,
                              display_on_card: display_on_card,
                              preload: preload,
                              loading: loading
                            -%}
                          {%- else -%}
                            {%- render 'product-tile',
                              product: product_value,
                              shape_id: shape_id,
                              index: forloop.index0,
                              enable_quick_buy: enable_quick_buy,
                              display_on_card: display_on_card,
                              preload: preload,
                              loading: loading,
                              sizes: product_tile_sizes
                            -%}
                          {%- endif -%}
                        </div>
                      {% else %}
                        {%- if forloop.first -%}
                          {%- if block.settings.product_tile_style == 'mini' -%}
                            {%- render 'product-tile-mini',
                              shape_id: shape_id,
                              index: forloop.index0,
                              enable_quick_buy: enable_quick_buy
                            -%}
                          {%- else -%}
                            {%- render 'product-tile',
                              shape_id: shape_id,
                              index: forloop.index0,
                              enable_quick_buy: enable_quick_buy
                            -%}
                          {%- endif -%}
                        {%- endif -%}
                      {% endif %}
                    {% endfor %}
                  </div>
              {%- endcase -%}
            {%- endunless -%}
          {%- endfor -%}
        </div>
      {% endif %}

      <div class="recipe__main grow-[999] {% if sidebar_present %}basis-0{% else %}mx-auto max-w-3xl{% endif %} [min-inline-size:50%]">
        <div class="{% if section.settings.display_on_card %}text-scheme-text card{% endif %}">
          <div class="p-5 lg:px-10 {% if section.settings.display_on_card %}card__surface{% endif %}">
            {% if section.settings.show_date or section.settings.show_author %}
              <p class="mb-2.5 space-y-1.5 text-center text-sm text-scheme-text lg:space-y-0">
                {% if section.settings.show_date %}
                  <span class="block lg:inline">
                    {{-
                      article.published_at
                      | time_tag: format: 'month_day_year'
                    -}}
                  </span>
                {% endif %}
                {% if section.settings.show_date
                  and section.settings.show_author
                %}
                  <span class="hidden lg:inline">&#183;</span>
                {% endif %}
                {% if section.settings.show_author %}
                  <span class="block lg:inline">
                    {{-
                      'blogs.article.by_author'
                      | t: author: article.author
                    -}}
                  </span>
                {% endif %}
              </p>
            {% endif %}

            <data-island class="rte mt-5" x-data="RTE">
              {{ article.content }}
            </data-island>

            {%- if show_share_links or show_tags -%}
              <div class="mt-6 space-y-2.5">
                {%- if show_tags %}
                  <div>
                    <ul class="flex flex-wrap items-center justify-center gap-4">
                      {% for tag in article.tags %}
                        <li class="btn shadow-secondary z-10 bg-scheme-secondary-background text-sm text-scheme-text after:hidden lg:text-base">
                          #
                          {{- tag | link_to_tag: tag }}
                        </li>
                      {% endfor %}
                    </ul>
                  </div>
                {%- endif -%}

                {%- if show_share_links -%}
                  <div class="flex items-center justify-center">
                    {% render 'social-sharing',
                      share_title: article.title,
                      share_permalink: article.url,
                      share_image: article.image
                    %}
                  </div>
                {%- endif -%}
              </div>
            {%- endif -%}

            {% if blog.comments_enabled? %}
              {%- liquid
                assign new_comment = false
                assign number_of_comments = article.comments_count

                if comment and comment.created_at
                  assign new_comment = true
                  assign new_comment_id = comment.id
                endif

                if new_comment
                  assign duplicate_comment = false
                  for comment in article.comments
                    if comment.id == new_comment_id
                      assign duplicate_comment = true
                      break
                    endif
                  endfor

                  unless duplicate_comment
                    assign number_of_comments = article.comments_count | plus: 1
                  endunless
                endif
              -%}
              <div class="mt-10">
                <h3 class="font-heading heading-standard  heading-style break-words text-center {{ settings.heading_drop_shadow_style }}">
                  {{
                    'blogs.comments.comments_with_count'
                    | t: count: number_of_comments
                  }}
                </h3>

                {% paginate article.comments by 6 %}
                  <div d="comments" class="mt-5">
                    {% if comment
                      and comment.status
                      and comment.id != blank
                      and paginate.current_page == 1
                    %}
                      <p class="form-success mb-5 bg-scheme-accent-1 p-5 text-scheme-accent-1-contrast">
                        {% if blog.moderated?
                          and comment.status != 'published'
                        %}
                          {{ 'blogs.comments.success_moderated' | t }}
                        {% else %}
                          {{ 'blogs.comments.success' | t }}
                        {% endif %}
                      </p>
                    {% endif %}

                    {% if number_of_comments > 0 %}
                      <ul class="space-y-5 lg:grid lg:grid-cols-2 lg:gap-5 lg:space-y-0">
                        {% assign comment_classes = 'p-5 input w-full h-full' %}
                        {% assign date_classes = 'mt-2.5 text-sm' %}
                        {% comment %}
                          Display comment from URL parameters if it is waiting moderation
                          We added "comment.id" check to make sure we don't display markup if there are form errors
                        {% endcomment %}
                        {% if comment
                          and comment.status != 'published'
                          and comment.id != blank
                        %}
                          <li
                            class="{{ comment_classes }} "
                            id="{{ comment.id }}"
                          >
                            <div class="rte">
                              {{ comment.content }}
                            </div>
                            {% capture date %}{{ comment.created_at | time_tag: format: 'month_day_year' }}{% endcapture %}
                            <p class="{{ date_classes }}">
                              {{
                                'blogs.article.comment_meta_html'
                                | t: author: comment.author, date: date
                              }}
                            </p>
                          </li>
                        {% endif %}

                        {% for comment in article.comments %}
                          <li
                            class="{{ comment_classes }}"
                            id="{{ comment.id }}"
                          >
                            <div class="rte">
                              {{ comment.content }}
                            </div>
                            {% capture date %}{{ comment.created_at | time_tag: format: 'month_day_year' }}{% endcapture %}
                            <p class="{{ date_classes }}">
                              {{
                                'blogs.article.comment_meta_html'
                                | t: author: comment.author, date: date
                              }}
                            </p>
                          </li>
                        {% endfor %}
                      </ul>

                      {% render 'pagination', paginate: paginate %}
                    {% endif %}
                  </div>

                  <div class="mt-10">
                    {% form 'new_comment', article %}
                      <h2 class="font-heading heading-secondary text-secondary text-center">
                        {{ 'blogs.comments.title' | t }}
                      </h2>

                      <div>
                        {{ form.errors | default_errors }}
                      </div>

                      <div class="mt-5 lg:grid lg:grid-cols-2 lg:gap-10">
                        {% assign input_classes = 'w-full input' %}
                        {% assign label_class = 'mb-1 block font-secondary text-sm' %}
                        <div class="space-y-5">
                          <div>
                            <label
                              for="CommentAuthor"
                              class="label-hidden {{ label_class }}"
                            >
                              {{ 'blogs.comments.name' | t }}
                            </label>
                            <input
                              type="text"
                              name="comment[author]"
                              id="CommentAuthor"
                              class="{{ input_classes }} {% if form.errors contains 'author' %}border-scheme-accent-1{% endif %}"
                              value="{{ form.author }}"
                              autocapitalize="words"
                              aria-required="true"
                              required
                            >
                          </div>
                          <div>
                            <label
                              for="CommentEmail"
                              class="label-hidden {{ label_class }}"
                            >
                              {{ 'blogs.comments.email' | t }}
                            </label>
                            <input
                              type="email"
                              name="comment[email]"
                              id="CommentEmail"
                              autocomplete="email"
                              class="{{ input_classes }} lg:mb-0 {% if form.errors contains 'email' %}input-error{% endif %}"
                              value="{{ form.email }}"
                              spellcheck="false"
                              autocomplete="off"
                              autocapitalize="off"
                              aria-required="true"
                              required
                            >
                          </div>
                        </div>
                        <div
                          class="mt-5 lg:mt-0 lg:flex lg:flex-col"
                        >
                          <label
                            for="CommentBody"
                            class="label-hidden {{ label_class }}"
                          >
                            {{ 'blogs.comments.message' | t }}
                          </label>
                          <textarea
                            name="comment[body]"
                            id="CommentBody"
                            rows="4"
                            required
                            class="{{ input_classes }} lg:flex-1  {% if form.errors contains 'body' %}input-error{% endif %}"
                          >
                          {{- form.body -}}
                        </textarea>
                        </div>

                        <div class="lg:col-span-2 lg:flex {% if blog.moderated? %}lg:justify-between{% else %}lg:justify-end{% endif %} mt-5 text-right lg:mt-0">
                          {% if blog.moderated? %}
                            <p class="mb-2.5 mr-5 text-sm">
                              {{ 'blogs.comments.moderated' | t }}
                            </p>
                          {% endif %}
                          <span class="push-btn inline-block  {% unless blog.moderated? %}ml-auto{% endunless %}">
                            <input
                              type="submit"
                              class="push-btn__surface"
                              value="{{ 'blogs.comments.post' | t }}"
                            >
                          </span>
                        </div>
                      </div>
                    {% endform %}
                  </div>
                {% endpaginate %}
              </div>
            {% endif %}
          </div>
        </div>
      </div>
    </div>

    {%- if section.settings.show_next_previous_links -%}
      <div class="recipe__article-links w-full max-w-site">
        {%- if blog.next_article or blog.previous_article -%}
          <div class="mt-10 flex items-center justify-between">
            {%- if blog.previous_article -%}
              <a
                href="{{ blog.previous_article }}"
                class="pagination__item push-btn z-10 mr-auto inline-block"
                aria-label="{{ 'blogs.article.older_post' | t }}"
              >
                <span class="push-btn__surface push-btn__surface--secondary p-2 align-bottom">
                  <span class="block h-5 w-5">
                    {%- render 'icon-previous' -%}
                  </span>
                </span>
              </a>
            {%- endif -%}
            {%- if blog.next_article -%}
              <a
                href="{{ blog.next_article }}"
                class="pagination__item push-btn z-10 ml-auto inline-block"
                aria-label="{{ 'blogs.article.newer_post' | t }}"
              >
                <span class="push-btn__surface push-btn__surface--secondary p-2 align-bottom">
                  <span class="block h-5 w-5">{% render 'icon-next' %}</span>
                </span>
              </a>
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>
    {%- endif -%}

    {%- liquid
      for block in section.blocks
        case block.type
          when 'background_shape'
            render 'block-background-shape', block: block
          when 'background_pattern'
            render 'block-background-pattern', block: block, scheme: section.settings.color_scheme
        endcase
      endfor
    -%}
  </div>

  <style>
    {% if sidebar_present == true %}
      #shopify-section-{{ section.id }} .recipe__ingredients-container {
        flex-basis: {{ sidebar_width_desktop }}rem;
      }
    {% endif %}

    #shopify-section-{{ section.id }} .recipe .section-content {
      padding-bottom: var(--section-vertical-spacing);
      {% if show_top_padding == true %}
        padding-top: var(--section-vertical-spacing);
      {% endif %}
    }
  </style>

  {%- liquid
    for background_shape in background_shapes
      render 'block-background-shape', block: background_shape
    endfor
    for background_pattern in background_patterns
      render 'block-background-pattern', block: background_pattern, scheme: section.settings.color_scheme
    endfor
  -%}
</section>

{%- liquid
  for sticker in stickers
    render 'block-sticker', block: sticker
  endfor
  for shape_divider in shape_dividers
    render 'block-shape-divider', block: shape_divider
  endfor
-%}

{% schema %}
{
  "name": "t:sections.article_recipe_page.name",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_top_padding",
      "label": "t:sections.article_recipe_page.settings.show_top_padding.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_next_previous_links",
      "label": "t:sections.article_page.settings.show_next_previous_links.label",
      "default": true
    },
    {
      "type": "header",
      "content": "t:common.settings.header_content"
    },
    {
      "type": "checkbox",
      "id": "display_on_card",
      "label": "t:common.settings.display_on_card.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_author",
      "label": "t:sections.article_page.settings.show_author.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_date",
      "label": "t:sections.article_page.settings.show_date.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_share_links",
      "label": "t:sections.article_page.settings.show_share_links.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_tags",
      "label": "t:common.settings.show_tags.label",
      "default": true
    },
    {
      "type": "select",
      "id": "desktop_max_width",
      "label": "t:sections.article_recipe_page.settings.desktop_max_width.label",
      "options": [
        {
          "value": "max-w-site",
          "label": "t:common.options.none.label"
        },
        {
          "value": "max-w-4xl",
          "label": "t:common.options.small.label"
        },
        {
          "value": "max-w-6xl",
          "label": "t:common.options.medium.label"
        },
        {
          "value": "max-w-7xl",
          "label": "t:common.options.large.label"
        }
      ],
      "default": "max-w-7xl"
    },
    {
      "type": "header",
      "content": "t:sections.article_recipe_page.settings.sidebar.label"
    },
    {
      "type": "range",
      "id": "sidebar_width_desktop",
      "min": 5,
      "max": 24,
      "step": 1,
      "label": "t:sections.article_recipe_page.settings.sidebar_width_desktop.label",
      "default": 18,
      "unit": "rem",
      "info": "t:sections.article_recipe_page.settings.sidebar_width_desktop.info"
    },
    {
      "type": "header",
      "content": "t:common.settings.header_color"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "default": "scheme1",
      "label": "t:common.settings.color_scheme.label"
    },
    {
      "type": "checkbox",
      "id": "use_gradient_background",
      "label": "t:common.settings.use_gradient_background.label"
    }
  ],
  "blocks": [
    {
      "type": "ingredients",
      "name": "t:sections.article_recipe_page.blocks.article_recipe_ingredients.name",
      "limit": 3,
      "settings": [
        {
          "type": "text",
          "id": "ingredients_heading",
          "label": "t:common.settings.title.label",
          "default": "Ingredients"
        },
        {
          "type": "checkbox",
          "id": "display_on_card",
          "label": "t:common.settings.display_on_card.label",
          "default": true
        },
        {
          "type": "richtext",
          "id": "ingredients_content",
          "label": "t:common.settings.header_content",
          "default": "<ul><li>Ingredient 1</li><li>Ingredient 2</li><li>Ingredient 3</li></ul>"
        }
      ]
    },
    {
      "type": "featured-products",
      "name": "t:sections.article_recipe_page.blocks.article_recipe_product.name",
      "limit": 1,
      "settings": [
        {
          "type": "product",
          "id": "product_1",
          "label": "t:sections.article_recipe_page.settings.product_1.label"
        },
        {
          "type": "product",
          "id": "product_2",
          "label": "t:sections.article_recipe_page.settings.product_2.label"
        },
        {
          "type": "product",
          "id": "product_3",
          "label": "t:sections.article_recipe_page.settings.product_3.label"
        },
        {
          "type": "header",
          "content": "t:sections.article_recipe_page.settings.product_tile.label"
        },
        {
          "type": "checkbox",
          "id": "display_on_card",
          "label": "t:common.settings.display_on_card.label",
          "default": true
        },
        {
          "type": "select",
          "id": "product_tile_style",
          "label": "t:common.settings.product_tile_style.label",
          "options": [
            {
              "value": "mini",
              "label": "t:common.options.mini.label"
            },
            {
              "value": "standard",
              "label": "t:common.options.standard.label"
            }
          ],
          "default": "mini"
        },
        {
          "type": "checkbox",
          "id": "enable_quick_buy",
          "label": "t:common.settings.enable_quick_buy.label",
          "info": "t:common.settings.enable_quick_buy_mini_only.info"
        }
      ]
    },
    {
      "type": "background_pattern",
      "name": "t:common.blocks.background_pattern.name",
      "settings": [
        {
          "type": "select",
          "id": "type",
          "label": "t:common.blocks.background_pattern.settings.type.label",
          "options": [
            {
              "value": "diagonal_lines",
              "label": "t:common.options.diagonal_lines.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_lines"
            },
            {
              "value": "grid",
              "label": "t:common.options.grid_lines.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_lines"
            },
            {
              "value": "grid_with_diagonal_lines",
              "label": "t:common.options.grid_with_diagonal_lines.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_lines"
            },
            {
              "value": "crosshatch",
              "label": "t:common.options.crosshatch.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_lines"
            },
            {
              "value": "zig_zag_lines",
              "label": "t:common.options.zig_zag.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_lines"
            },
            {
              "value": "waves_lines",
              "label": "t:common.options.waves.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_lines"
            },
            {
              "value": "dots",
              "label": "t:common.options.dots.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_shapes"
            },
            {
              "value": "triangle",
              "label": "t:common.options.triangles.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_shapes"
            },
            {
              "value": "polka_dot",
              "label": "t:common.options.polka_dot.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_shapes"
            },
            {
              "value": "polka_dot_triangles",
              "label": "t:common.options.polka_dot_triangles.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_shapes"
            },
            {
              "value": "plus",
              "label": "t:common.options.plus.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_shapes"
            },
            {
              "value": "cross",
              "label": "t:common.options.cross.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_shapes"
            },
            {
              "value": "squares",
              "label": "t:common.options.squares.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_shapes"
            },
            {
              "value": "vertical_stripes",
              "label": "t:common.options.vertical_stripes.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_stripes"
            },
            {
              "value": "horizontal_stripes",
              "label": "t:common.blocks.background_pattern.settings.type.options.horizontal_stripes.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_stripes"
            },
            {
              "value": "diagonal_stripes",
              "label": "t:common.options.diagonal_stripes.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_stripes"
            },
            {
              "value": "half_square_triangle",
              "label": "t:common.options.half-square_triangle.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "checkerboard",
              "label": "t:common.options.checkerboard.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "corner_triangle",
              "label": "t:common.options.corner_triangle.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "diamonds",
              "label": "t:common.options.diamonds.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "scales",
              "label": "t:common.options.scales.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "alternating_pinwheel",
              "label": "t:common.options.alternating_pinwheel.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "windmill",
              "label": "t:common.options.windmill.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "origami",
              "label": "t:common.options.origami.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "argyle",
              "label": "t:common.options.argyle.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "chevrons_1",
              "label": "t:common.options.chevrons_1.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "chevrons_2",
              "label": "t:common.options.chevrons_2.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "connected_circles",
              "label": "t:common.options.connected_circles.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "alternating_triangles",
              "label": "t:common.options.alternating_triangles.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "waves_geometric",
              "label": "t:common.options.waves.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "hexagons_geometric",
              "label": "t:common.options.hexagons.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "squiggle",
              "label": "t:common.options.squiggle.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "zig_zag_geometric",
              "label": "t:common.options.zig_zag.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_geometric"
            },
            {
              "value": "squiggles",
              "label": "t:common.options.squiggles.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_miscellaneous"
            },
            {
              "value": "sprinkles",
              "label": "t:common.blocks.background_pattern.settings.type.options.sprinkles.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_miscellaneous"
            },
            {
              "value": "8bit",
              "label": "t:common.options.8bit.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_miscellaneous"
            },
            {
              "value": "3d_cube",
              "label": "t:common.blocks.background_pattern.settings.type.options.3d_cube.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_miscellaneous"
            },
            {
              "value": "bubbles",
              "label": "t:common.blocks.background_pattern.settings.type.options.bubbles.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_miscellaneous"
            },
            {
              "value": "macaroni",
              "label": "t:common.options.macaroni.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_miscellaneous"
            },
            {
              "value": "leaves",
              "label": "t:common.options.leaves.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_miscellaneous"
            },
            {
              "value": "bricks",
              "label": "t:common.options.bricks.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_miscellaneous"
            },
            {
              "value": "herringbone_1",
              "label": "t:common.options.herringbone_1.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_miscellaneous"
            },
            {
              "value": "herringbone_2",
              "label": "t:common.options.herringbone_2.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_miscellaneous"
            },
            {
              "value": "interlocking_hexagons",
              "label": "t:common.options.interlocking_hexagons.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_miscellaneous"
            },
            {
              "value": "blobs",
              "label": "t:common.options.blobs.label",
              "group": "t:common.blocks.background_pattern.settings.type.options.group_miscellaneous"
            }
          ]
        },
        {
          "type": "select",
          "id": "color",
          "label": "t:common.blocks.background_pattern.settings.color.label",
          "default": "text",
          "options": [
            {
              "value": "text",
              "label": "t:common.options.text.label"
            },
            {
              "value": "accent-1",
              "label": "t:common.options.accent_1.label"
            },
            {
              "value": "accent-2",
              "label": "t:common.options.accent_2.label"
            },
            {
              "value": "card",
              "label": "t:common.options.card.label"
            },
            {
              "value": "background",
              "label": "t:common.options.background.label"
            },
            {
              "value": "gradient",
              "label": "t:common.options.gradient.label"
            }
          ]
        },
        {
          "type": "range",
          "id": "size",
          "min": 8,
          "max": 600,
          "unit": "px",
          "label": "t:common.blocks.background_pattern.settings.size.label",
          "step": 8,
          "default": 24
        },
        {
          "type": "range",
          "id": "opacity",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "t:common.settings.opacity.label",
          "default": 100
        },
        {
          "type": "header",
          "content": "t:common.settings.header_animation"
        },
        {
          "type": "checkbox",
          "id": "enable_parallax",
          "label": "t:common.blocks.background_pattern.settings.enable_parallax.label",
          "default": false,
          "info": "t:common.blocks.background_pattern.settings.enable_parallax.info"
        },
        {
          "type": "range",
          "id": "parallax_speed",
          "min": 1,
          "max": 10,
          "step": 1,
          "label": "t:common.settings.parallax_speed.label",
          "default": 3
        }
      ]
    },
    {
      "type": "background_shape",
      "name": "t:common.blocks.background_shape.name",
      "settings": [
        {
          "type": "select",
          "id": "shape",
          "label": "t:common.blocks.background_shape.settings.shape.label",
          "default": "square",
          "options": [
            {
              "value": "square",
              "label": "t:common.blocks.background_shape.settings.shape.options.square.label",
              "group": "t:common.groups.basic"
            },
            {
              "value": "circle",
              "label": "t:common.blocks.background_shape.settings.shape.options.circle.label",
              "group": "t:common.groups.basic"
            },
            {
              "value": "oval",
              "label": "t:common.blocks.background_shape.settings.shape.options.oval.label",
              "group": "t:common.groups.basic"
            },
            {
              "value": "triangle",
              "label": "t:common.blocks.background_shape.settings.shape.options.triangle.label",
              "group": "t:common.groups.basic"
            },
            {
              "value": "pentagon",
              "label": "t:common.options.pentagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "hexagon",
              "label": "t:common.options.hexagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "heptagon",
              "label": "t:common.options.heptagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "octagon",
              "label": "t:common.options.octagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "nonagon",
              "label": "t:common.options.nonagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "decagon",
              "label": "t:common.options.decagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "rounded_pentagon",
              "label": "t:common.options.rounded_pentagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "rounded_hexagon",
              "label": "t:common.options.rounded_hexagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "rounded_heptagon",
              "label": "t:common.options.rounded_heptagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "rounded_octagon",
              "label": "t:common.options.rounded_octagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "rounded_nonagon",
              "label": "t:common.options.rounded_nonagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "rounded_decagon",
              "label": "t:common.options.rounded_decagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "star_1",
              "label": "t:common.options.star_1.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "star_2",
              "label": "t:common.options.star_2.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "star_3",
              "label": "t:common.options.star_3.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "star_4",
              "label": "t:common.options.star_4.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "star_5",
              "label": "t:common.options.star_5.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "star_6",
              "label": "t:common.options.star_6.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "abstract_star_1",
              "label": "t:common.options.abstract_star_1.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "abstract_star_2",
              "label": "t:common.options.abstract_star_2.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "abstract_star_3",
              "label": "t:common.options.abstract_star_3.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "scalloped_circle_1",
              "label": "t:common.options.scalloped_circle_1.label",
              "group": "t:common.groups.scalloped_circles"
            },
            {
              "value": "scalloped_circle_2",
              "label": "t:common.options.scalloped_circle_2.label",
              "group": "t:common.groups.scalloped_circles"
            },
            {
              "value": "scalloped_circle_3",
              "label": "t:common.options.scalloped_circle_3.label",
              "group": "t:common.groups.scalloped_circles"
            },
            {
              "value": "scalloped_circle_4",
              "label": "t:common.options.scalloped_circle_4.label",
              "group": "t:common.groups.scalloped_circles"
            },
            {
              "value": "scalloped_circle_5",
              "label": "t:common.options.scalloped_circle_5.label",
              "group": "t:common.groups.scalloped_circles"
            },
            {
              "value": "scalloped_circle_6",
              "label": "t:common.options.scalloped_circle_6.label",
              "group": "t:common.groups.scalloped_circles"
            },
            {
              "value": "parallelogram",
              "label": "t:common.options.parallelogram.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "squircle",
              "label": "t:common.options.squircle.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "scalloped_square_1",
              "label": "t:common.options.scalloped_square_1.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "scalloped_square_2",
              "label": "t:common.options.scalloped_square_2.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "leaf",
              "label": "t:common.options.leaf.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "clipped_square",
              "label": "t:common.options.clipped.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "convex_square",
              "label": "t:common.options.convex.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "twisted_square",
              "label": "t:common.options.twisted.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "trapeze",
              "label": "t:common.options.trapeze.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "pinched",
              "label": "t:common.options.pinched.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "pixelated",
              "label": "t:common.options.pixelated.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "overlapped",
              "label": "t:common.options.overlapped.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "zig_zag",
              "label": "t:common.options.zig_zag.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "zig_zag_tear",
              "label": "t:common.options.zig_zag_tear.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "wave_tear",
              "label": "t:common.options.wave_tear.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "flower",
              "label": "t:common.options.flower.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "flower_bloom",
              "label": "t:common.options.flower_bloom.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "concave",
              "label": "t:common.options.concave.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "flag",
              "label": "t:common.options.flag.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "abstract_oval",
              "label": "t:common.options.abstract_oval.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "cross",
              "label": "t:common.options.cross.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "quatrefoil",
              "label": "t:common.options.quatrefoil.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "quadrant",
              "label": "t:common.options.quadrant.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "wind",
              "label": "t:common.options.wind.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "windmill",
              "label": "t:common.options.windmill.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "heart",
              "label": "t:common.options.heart.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "mirrored_pyramids",
              "label": "t:common.options.mirrored_pyramids.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "plus",
              "label": "t:common.options.plus.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "double_pill_1",
              "label": "t:common.options.double_pill_1.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "double_pill_2",
              "label": "t:common.options.double_pill_2.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "triple_pill_1",
              "label": "t:common.options.triple_pill_1.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "triple_pill_2",
              "label": "t:common.options.triple_pill_2.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "crown",
              "label": "t:common.options.crown.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "stair",
              "label": "t:common.options.stair.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "pancake_stack",
              "label": "t:common.options.pancake_stack.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "asterisk",
              "label": "t:common.options.asterisk.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "overlapping_squares",
              "label": "t:common.options.overlapping_squares.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "brush_stroke",
              "label": "t:common.options.brush_stroke.label",
              "group": "t:common.groups.miscellaneous"
            },
            {
              "value": "blob",
              "label": "t:common.options.blob.label",
              "group": "t:common.groups.variable"
            }
          ]
        },
        {
          "type": "range",
          "id": "blob_type",
          "min": 1,
          "max": 10,
          "step": 1,
          "label": "t:common.blocks.background_shape.settings.blob_type.label",
          "default": 1,
          "info": "t:common.blocks.background_shape.settings.blob_type.info"
        },
        {
          "type": "range",
          "id": "size",
          "min": 25,
          "max": 300,
          "step": 5,
          "label": "t:common.blocks.background_shape.settings.size.label",
          "default": 100
        },
        {
          "type": "range",
          "id": "opacity",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "t:common.settings.opacity.label",
          "default": 100
        },
        {
          "type": "range",
          "id": "blur",
          "min": 0,
          "max": 500,
          "step": 5,
          "unit": "px",
          "label": "t:common.blocks.background_shape.settings.blur.label",
          "default": 0
        },
        {
          "type": "header",
          "content": "t:common.settings.header_position"
        },
        {
          "type": "range",
          "id": "horizontal_position",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "t:common.blocks.background_shape.settings.horizontal_position.label",
          "default": 50
        },
        {
          "type": "range",
          "id": "vertical_position",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "t:common.blocks.background_shape.settings.vertical_position.label",
          "default": 50
        },
        {
          "type": "range",
          "id": "rotate",
          "min": -90,
          "max": 90,
          "step": 2,
          "unit": "deg",
          "label": "t:common.settings.rotate.label",
          "default": 0
        },
        {
          "type": "header",
          "content": "t:common.settings.header_animation"
        },
        {
          "type": "checkbox",
          "id": "enable_parallax",
          "label": "t:common.blocks.background_shape.settings.enable_parallax.label",
          "default": false,
          "info": "t:common.blocks.background_shape.settings.enable_parallax.info"
        },
        {
          "type": "range",
          "id": "parallax_speed",
          "min": 1,
          "max": 10,
          "step": 1,
          "label": "t:common.settings.parallax_speed.label",
          "default": 3
        },
        {
          "type": "header",
          "content": "t:common.settings.header_color"
        },
        {
          "type": "color_scheme",
          "id": "color_scheme",
          "default": "scheme1",
          "label": "t:common.settings.color_scheme.label"
        },
        {
          "type": "select",
          "id": "color",
          "label": "t:common.settings.background_color.label",
          "default": "accent-1",
          "options": [
            {
              "value": "text",
              "label": "t:common.options.text.label"
            },
            {
              "value": "accent-1",
              "label": "t:common.options.accent_1.label"
            },
            {
              "value": "accent-2",
              "label": "t:common.options.accent_2.label"
            },
            {
              "value": "card",
              "label": "t:common.options.card.label"
            },
            {
              "value": "background",
              "label": "t:common.options.background.label"
            },
            {
              "value": "gradient",
              "label": "t:common.options.gradient.label"
            }
          ]
        }
      ]
    },
    {
      "name": "t:common.blocks.sticker.name",
      "type": "sticker",
      "settings": [
        {
          "type": "range",
          "id": "width",
          "min": 100,
          "max": 300,
          "step": 10,
          "unit": "px",
          "label": "t:common.blocks.sticker.settings.width.label",
          "default": 150
        },
        {
          "type": "checkbox",
          "id": "half_width_on_mobile",
          "label": "t:common.blocks.sticker.settings.half_width_on_mobile.label",
          "default": false
        },
        {
          "type": "text",
          "id": "text",
          "label": "t:common.blocks.sticker.settings.text.label",
          "info": "t:common.blocks.sticker.settings.text.info",
          "default": "Sticker"
        },
        {
          "type": "select",
          "id": "shape",
          "label": "t:common.blocks.sticker.settings.shape.label",
          "options": [
            {
              "value": "fit_to_text",
              "label": "t:common.blocks.sticker.settings.shape.options.fit_to_text.label"
            },
            {
              "value": "circle",
              "label": "t:common.options.circle.label",
              "group": "t:common.groups.basic"
            },
            {
              "value": "pentagon",
              "label": "t:common.options.pentagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "hexagon",
              "label": "t:common.options.hexagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "heptagon",
              "label": "t:common.options.heptagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "octagon",
              "label": "t:common.options.octagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "nonagon",
              "label": "t:common.options.nonagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "decagon",
              "label": "t:common.options.decagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "rounded_pentagon",
              "label": "t:common.options.rounded_pentagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "rounded_hexagon",
              "label": "t:common.options.rounded_hexagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "rounded_heptagon",
              "label": "t:common.options.rounded_heptagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "rounded_octagon",
              "label": "t:common.options.rounded_octagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "rounded_nonagon",
              "label": "t:common.options.rounded_nonagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "rounded_decagon",
              "label": "t:common.options.rounded_decagon.label",
              "group": "t:common.groups.polygons"
            },
            {
              "value": "star_1",
              "label": "t:common.options.star_1.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "star_2",
              "label": "t:common.options.star_2.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "star_3",
              "label": "t:common.options.star_3.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "star_4",
              "label": "t:common.options.star_4.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "star_5",
              "label": "t:common.options.star_5.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "star_6",
              "label": "t:common.options.star_6.label",
              "group": "t:common.groups.stars"
            },
            {
              "value": "scalloped_circle_1",
              "label": "t:common.options.scalloped_circle_1.label",
              "group": "t:common.groups.scalloped_circles"
            },
            {
              "value": "scalloped_circle_2",
              "label": "t:common.options.scalloped_circle_2.label",
              "group": "t:common.groups.scalloped_circles"
            },
            {
              "value": "scalloped_circle_3",
              "label": "t:common.options.scalloped_circle_3.label",
              "group": "t:common.groups.scalloped_circles"
            },
            {
              "value": "scalloped_circle_4",
              "label": "t:common.options.scalloped_circle_4.label",
              "group": "t:common.groups.scalloped_circles"
            },
            {
              "value": "scalloped_circle_5",
              "label": "t:common.options.scalloped_circle_5.label",
              "group": "t:common.groups.scalloped_circles"
            },
            {
              "value": "scalloped_circle_6",
              "label": "t:common.options.scalloped_circle_6.label",
              "group": "t:common.groups.scalloped_circles"
            },
            {
              "value": "parallelogram",
              "label": "t:common.options.parallelogram.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "squircle",
              "label": "t:common.options.squircle.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "scalloped_square_1",
              "label": "t:common.options.scalloped_square_1.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "scalloped_square_2",
              "label": "t:common.options.scalloped_square_2.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "leaf",
              "label": "t:common.options.leaf.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "clipped_square",
              "label": "t:common.options.clipped.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "convex_square",
              "label": "t:common.options.convex.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "twisted_square",
              "label": "t:common.options.twisted.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "trapeze",
              "label": "t:common.options.trapeze.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "pinched",
              "label": "t:common.options.pinched.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "pixelated",
              "label": "t:common.options.pixelated.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "overlapped",
              "label": "t:common.options.overlapped.label",
              "group": "t:common.groups.square"
            },
            {
              "value": "ellipse",
              "label": "t:common.options.ellipse.label",
              "group": "t:common.groups.wide"
            },
            {
              "value": "diamond_wide",
              "label": "t:common.options.diamond.label",
              "group": "t:common.groups.wide"
            },
            {
              "value": "rounded_diamond_wide",
              "label": "t:common.options.rounded_diamond.label",
              "group": "t:common.groups.wide"
            },
            {
              "value": "triangle_wide",
              "label": "t:common.options.triangle.label",
              "group": "t:common.groups.wide"
            },
            {
              "value": "hexagon_wide",
              "label": "t:common.options.hexagon.label",
              "group": "t:common.groups.wide"
            },
            {
              "value": "rounded_hexagon_wide",
              "label": "t:common.options.rounded_hexagon.label",
              "group": "t:common.groups.wide"
            },
            {
              "value": "uneven_star_wide",
              "label": "t:common.options.uneven_star.label",
              "group": "t:common.groups.wide"
            },
            {
              "value": "star_wide",
              "label": "t:common.options.star.label",
              "group": "t:common.groups.wide"
            },
            {
              "value": "semicircle",
              "label": "t:common.options.semicircle.label",
              "group": "t:common.groups.wide"
            },
            {
              "value": "eye",
              "label": "t:common.options.eye.label",
              "group": "t:common.groups.wide"
            },
            {
              "value": "parallelogram_wide",
              "label": "t:common.options.parallelogram.label",
              "group": "t:common.groups.wide"
            },
            {
              "value": "ribbon",
              "label": "t:common.options.ribbon.label",
              "group": "t:common.groups.wide"
            },
            {
              "value": "ticket_stub",
              "label": "t:common.options.ticket_stub.label",
              "group": "t:common.groups.wide"
            },
            {
              "value": "wave_ribbon",
              "label": "t:common.options.wave_ribbon.label",
              "group": "t:common.groups.wide"
            },
            {
              "value": "zig_zag_ribbon",
              "label": "t:common.options.zig_zag_ribbon.label",
              "group": "t:common.groups.wide"
            }
          ],
          "default": "star_1"
        },
        {
          "type": "select",
          "id": "sticker_font_size",
          "label": "t:common.settings.sticker_font_size.label",
          "options": [
            {
              "value": "1rem",
              "label": "t:common.options.extra_small.label"
            },
            {
              "value": "1.25rem",
              "label": "t:common.options.small.label"
            },
            {
              "value": "1.563rem",
              "label": "t:common.options.medium.label"
            },
            {
              "value": "1.953rem",
              "label": "t:common.options.large.label"
            },
            {
              "value": "2.441rem",
              "label": "t:common.options.extra_large.label"
            }
          ],
          "default": "1.563rem",
          "info": "t:common.settings.sticker_font_size.info"
        },
        {
          "type": "header",
          "content": "t:common.settings.header_custom_image"
        },
        {
          "type": "paragraph",
          "content": "t:common.blocks.sticker.settings.paragraph_using_an_image"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:common.settings.image.label"
        },
        {
          "type": "header",
          "content": "t:common.settings.header_position"
        },
        {
          "type": "range",
          "id": "horizontal_position",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "t:common.blocks.sticker.settings.horizontal_position.label",
          "default": 80
        },
        {
          "type": "range",
          "id": "vertical_position",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "t:common.blocks.sticker.settings.vertical_position.label",
          "default": 80
        },
        {
          "type": "range",
          "id": "rotate",
          "min": -90,
          "max": 90,
          "step": 2,
          "unit": "deg",
          "label": "t:common.settings.rotate.label",
          "default": 0
        },
        {
          "type": "header",
          "content": "t:common.settings.header_layout"
        },
        {
          "type": "checkbox",
          "id": "show_sticker_on_mobile",
          "label": "t:common.blocks.sticker.settings.show_sticker_on_mobile.label",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_sticker_on_desktop",
          "label": "t:common.blocks.sticker.settings.show_sticker_on_desktop.label",
          "default": true
        },
        {
          "type": "header",
          "content": "t:common.settings.header_animation"
        },
        {
          "type": "select",
          "id": "rotation_animation",
          "label": "t:common.blocks.sticker.settings.rotation_animation.label",
          "options": [
            {
              "value": "none",
              "label": "t:common.blocks.sticker.settings.rotation_animation.options.no_rotation.label"
            },
            {
              "value": "constantly_rotate",
              "label": "t:common.blocks.sticker.settings.rotation_animation.options.constantly_rotate.label"
            },
            {
              "value": "rotate_when_scrolling",
              "label": "t:common.blocks.sticker.settings.rotation_animation.options.rotate_only_when_page_is_scrolling.label"
            }
          ],
          "default": "none"
        },
        {
          "type": "checkbox",
          "id": "enable_parallax",
          "label": "t:common.blocks.sticker.settings.enable_parallax.label",
          "default": false,
          "info": "t:common.blocks.sticker.settings.enable_parallax.info"
        },
        {
          "type": "range",
          "id": "parallax_speed",
          "min": 1,
          "max": 10,
          "step": 1,
          "label": "t:common.settings.parallax_speed.label",
          "default": 3
        },
        {
          "type": "header",
          "content": "t:common.settings.header_color"
        },
        {
          "type": "color_scheme",
          "id": "color_scheme",
          "default": "scheme1",
          "label": "t:common.settings.color_scheme.label"
        },
        {
          "type": "select",
          "id": "color",
          "label": "t:common.settings.background_color.label",
          "default": "bg-scheme-accent-1 text-scheme-accent-1-contrast",
          "options": [
            {
              "value": "bg-scheme-text text-scheme-text-contrast",
              "label": "t:common.options.text.label"
            },
            {
              "value": "bg-scheme-accent-1 text-scheme-accent-1-contrast",
              "label": "t:common.options.accent_1.label"
            },
            {
              "value": "bg-scheme-accent-2 text-scheme-accent-2-contrast",
              "label": "t:common.options.accent_2.label"
            },
            {
              "value": "bg-scheme-card text-scheme-card-text",
              "label": "t:common.options.card.label"
            },
            {
              "value": "bg-scheme-background text-scheme-text",
              "label": "t:common.options.background.label"
            },
            {
              "value": "bg-scheme-gradient text-scheme-text",
              "label": "t:common.options.gradient.label"
            }
          ]
        }
      ]
    },
    {
      "name": "t:common.blocks.shape_divider.name",
      "type": "shape_divider",
      "limit": 2,
      "settings": [
        {
          "type": "select",
          "label": "t:common.blocks.shape_divider.settings.target_section.label",
          "id": "target_section",
          "default": "above",
          "options": [
            {
              "value": "above",
              "label": "t:common.blocks.shape_divider.settings.target_section.options.section_above.label"
            },
            {
              "value": "below",
              "label": "t:common.blocks.shape_divider.settings.target_section.options.section_below.label"
            }
          ],
          "info": "t:common.blocks.shape_divider.settings.target_section.info"
        },
        {
          "type": "color_scheme",
          "id": "target_section_color_scheme",
          "default": "scheme1",
          "label": "t:common.blocks.shape_divider.settings.target_section_color_scheme.label",
          "info": "t:common.blocks.shape_divider.settings.target_section_color_scheme.info"
        },
        {
          "type": "select",
          "label": "t:common.blocks.shape_divider.settings.style.label",
          "id": "style",
          "default": "waves-1-patterned_1200x20",
          "options": [
            {
              "value": "waves-1-patterned_1200x20",
              "label": "t:common.blocks.shape_divider.settings.style.options.waves_1.label",
              "group": "t:common.blocks.shape_divider.settings.style.group_patterned"
            },
            {
              "value": "waves-2-patterned_1200x43",
              "label": "t:common.blocks.shape_divider.settings.style.options.waves_2.label",
              "group": "t:common.blocks.shape_divider.settings.style.group_patterned"
            },
            {
              "value": "waves-3-patterned_1200x84",
              "label": "t:common.blocks.shape_divider.settings.style.options.waves_3.label",
              "group": "t:common.blocks.shape_divider.settings.style.group_patterned"
            },
            {
              "value": "zig-zag-1-patterned_1200x21",
              "label": "t:common.blocks.shape_divider.settings.style.options.zig_zag_1.label",
              "group": "t:common.blocks.shape_divider.settings.style.group_patterned"
            },
            {
              "value": "zig-zag-2-patterned_1200x37",
              "label": "t:common.blocks.shape_divider.settings.style.options.zig_zag_2.label",
              "group": "t:common.blocks.shape_divider.settings.style.group_patterned"
            },
            {
              "value": "zig-zag-3-patterned_1200x65",
              "label": "t:common.blocks.shape_divider.settings.style.options.zig_zag_3.label",
              "group": "t:common.blocks.shape_divider.settings.style.group_patterned"
            },
            {
              "value": "circles-1-patterned_1200x16",
              "label": "t:common.blocks.shape_divider.settings.style.options.circles_1.label",
              "group": "t:common.blocks.shape_divider.settings.style.group_patterned"
            },
            {
              "value": "circles-2-patterned_1200x35",
              "label": "t:common.blocks.shape_divider.settings.style.options.circles_2.label",
              "group": "t:common.blocks.shape_divider.settings.style.group_patterned"
            },
            {
              "value": "circles-3-patterned_1200x67",
              "label": "t:common.blocks.shape_divider.settings.style.options.circles_3.label",
              "group": "t:common.blocks.shape_divider.settings.style.group_patterned"
            },
            {
              "value": "spikes-1-patterned_1200x132",
              "label": "t:common.blocks.shape_divider.settings.style.options.spikes_1.label",
              "group": "t:common.blocks.shape_divider.settings.style.group_patterned"
            },
            {
              "value": "spikes-2-patterned_1200x132",
              "label": "t:common.blocks.shape_divider.settings.style.options.spikes_2.label",
              "group": "t:common.blocks.shape_divider.settings.style.group_patterned"
            },
            {
              "value": "tilt-1-shape_1440x101",
              "label": "t:common.blocks.shape_divider.settings.style.options.tilt_1.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "tilt-2-shape_1440x180",
              "label": "t:common.blocks.shape_divider.settings.style.options.tilt_2.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "tilt-3-shape_1440x293",
              "label": "t:common.blocks.shape_divider.settings.style.options.tilt_3.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "waves-1-shape_1440x261",
              "label": "t:common.blocks.shape_divider.settings.style.options.waves_1.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "waves-2-shape_1440x330",
              "label": "t:common.blocks.shape_divider.settings.style.options.waves_2.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "mountains-1-shape_1440x293",
              "label": "t:common.blocks.shape_divider.settings.style.options.mountains_1.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "mountains-2-shape_1440x325",
              "label": "t:common.blocks.shape_divider.settings.style.options.mountains_2.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "curve-shape_1440x149",
              "label": "t:common.blocks.shape_divider.settings.style.options.curve.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "curve-inverse-shape_1440x149",
              "label": "t:common.blocks.shape_divider.settings.style.options.curve_inverse.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "steps-1-shape_1400x105",
              "label": "t:common.blocks.shape_divider.settings.style.options.steps_1.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "steps-2-shape_1400x105",
              "label": "t:common.blocks.shape_divider.settings.style.options.steps_2.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "arrow-1-shape_1400x33",
              "label": "t:common.blocks.shape_divider.settings.style.options.arrow_1.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "arrow-2-shape_1400x73",
              "label": "t:common.blocks.shape_divider.settings.style.options.arrow_2.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "offset-ovals-shape_1400x155",
              "label": "t:common.blocks.shape_divider.settings.style.options.offset_ovals.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "triangle-shape_1400x145",
              "label": "t:common.blocks.shape_divider.settings.style.options.triangle.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "triangle-asymmetrical-shape_1400x145",
              "label": "t:common.blocks.shape_divider.settings.style.options.triangle_asymmetrical.label",
              "group": "t:common.settings.shape.label"
            },
            {
              "value": "clouds-shape_1400x161",
              "label": "t:common.blocks.shape_divider.settings.style.options.clouds.label",
              "group": "t:common.settings.shape.label"
            }
          ]
        },
        {
          "type": "checkbox",
          "id": "flip_horizontal",
          "label": "t:common.blocks.shape_divider.settings.flip_horizontal.label"
        },
        {
          "type": "header",
          "content": "t:common.settings.header_animation"
        },
        {
          "type": "checkbox",
          "id": "enable_animation",
          "label": "t:common.blocks.shape_divider.settings.enable_animation.label",
          "info": "t:common.blocks.shape_divider.settings.enable_animation.info"
        },
        {
          "type": "select",
          "id": "animation_direction",
          "label": "t:common.blocks.shape_divider.settings.animation_direction.label",
          "options": [
            {
              "value": "",
              "label": "t:common.options.right_to_left.label"
            },
            {
              "value": "reverse",
              "label": "t:common.options.left_to_right.label"
            }
          ],
          "default": ""
        }
      ]
    }
  ]
}
{% endschema %}
