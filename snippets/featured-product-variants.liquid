{%- liquid
  assign image_shape = image_shape | default: settings.product_tile_media_shape
  assign mobile_grid_cols = item.settings.products_per_row_mobile
  assign layout = item.settings.layout
  case item.settings.products_per_row_desktop
    when 2
      assign desktop_grid_cols = 'lg:grid-cols-2'
    when 3
      assign desktop_grid_cols = 'lg:grid-cols-3'
    when 4
      assign desktop_grid_cols = 'lg:grid-cols-4'
    when 5
      assign desktop_grid_cols = 'lg:grid-cols-5'
  endcase

  case item.settings.mobile_slide_width
    when 'three_fifths'
      assign mobile_slide_width = 'w-3/5'
    when 'full_width'
      assign mobile_slide_width = 'w-full'
  endcase

  assign variants_count = product.variants.size
  if variants_count > variant_limit
    assign variants_count = variant_limit
  endif

  if variants_count == 1
    assign layout = 'grid'
  endif

  assign eager_loading_limit = mobile_grid_cols | plus: 0

  if layout == 'grid'
    if item.settings.display_on_card
      assign desktop_sizes = 'calc((100vw / ' | append: item.settings.products_per_row_desktop | append: ') - 2.5rem)'

      if item.settings.products_per_row_mobile == '2'
        assign mobile_sizes = 'calc((100vw / ' | append: item.settings.products_per_row_mobile | append: ') - 1.25rem)'
      else
        assign mobile_sizes = 'calc((100vw / ' | append: item.settings.products_per_row_mobile | append: ') - 2.5rem)'
      endif
    else
      assign desktop_sizes = 'calc(100vw / ' | append: item.settings.products_per_row_desktop | append: ')'
      assign mobile_sizes = 'calc(100vw / ' | append: item.settings.products_per_row_mobile | append: ')'
    endif
  else
    if item.settings.display_on_card
      assign desktop_sizes = 'calc(' | append: item.settings.desktop_slide_width | append: 'vw - 2.5rem)'

      if mobile_slide_width == 'w-3/5'
        assign mobile_sizes = 'calc(60vw - 2.5rem)'
      else
        assign mobile_sizes = 'calc(100vw - 2.5rem)'
      endif
    else
      assign desktop_sizes = item.settings.desktop_slide_width | append: 'vw'

      if mobile_slide_width == 'w-3/5'
        assign mobile_sizes = '60vw'
      else
        assign mobile_sizes = '100vw'
      endif
    endif
  endif

  assign sizes = '(min-width: 990px) ' | append: desktop_sizes | append: ', ' | append: mobile_sizes

  assign will_transform = false
  if layout == 'carousel'
    assign will_transform = true
  endif
-%}

{%- render 'collection-shape-defs',
  shape: image_shape,
  section_id: item.id,
  item_count: variants_count
-%}

<div
  {% if layout == 'carousel' %}
    id="slideshow-{{ section.id }}-{{ index }}"
  {% endif %}
  class="{% if item.settings.title != '' %}section-content-top-margin{% endif %} {% if layout == 'carousel' %}splide{% endif %}"
>
  <div class="{% if layout == 'carousel' %}splide__track overflow-visible {% if settings.product_tiles_scatter %}splide__track--scattered{% endif %} {% if item.settings.display_on_card %}{% if settings.card_shadow_direction contains 'top' %}with-top-card-shadow{% else %}with-bottom-card-shadow{% endif %}{% endif %}{% endif %}">
    <ul class="{% if layout == 'carousel' %}splide__list{% endif %} {% if layout == 'grid' %}grid gap-theme {% if mobile_grid_cols == '2' %}grid-cols-2{% else %}grid-cols-1{% endif %} {{ desktop_grid_cols }}{% endif %} {% if settings.product_tiles_scatter %}py-4{% endif %}">
      {%- for variant in product.variants limit: variant_limit -%}
        <li class="{% if layout == 'carousel' %}splide__slide {{ mobile_slide_width }}{% endif %}">
          {%- liquid
            if settings.product_tiles_scatter
              if layout == 'carousel'
                capture class
                  cycle '-mt-4 ', 'mt-4 '
                endcapture
              else
                capture class
                  case item.settings.products_per_row_mobile
                    when '2'
                      cycle 'max-lg:-mt-4 ', 'max-lg:mt-4 '
                  endcase
                  case item.settings.products_per_row_desktop
                    when 3
                      cycle 'lg:mt-4 ', 'lg:-mt-4 ', 'lg:mt-4 '
                    when 2, 4
                      cycle 'lg:-mt-4 ', 'lg:mt-4 '
                    when 5
                      cycle 'lg:mt-4 ', 'lg:-mt-4 ', 'lg:mt-4 ', 'lg:-mt-4 ', 'lg:mt-4 '
                  endcase
                endcapture
              endif
            endif
            capture odd_even
              cycle 'odd', 'even'
            endcapture

            assign shape_id = item.id
            if image_shape == 'blob'
              assign shape_id = item.id | append: '-' | append: forloop.index0
            endif

            if item.index <= 3 and forloop.index <= eager_loading_limit
              assign loading = 'eager'
            else
              assign loading = 'lazy'
            endif

            if item.index == 1 and forloop.first
              assign preload = true
            else
              assign preload = false
            endif
          -%}
          {%- render 'variant-tile',
            product: product,
            variant: variant,
            crop: item.settings.product_tiles_aspect_ratio,
            shape: image_shape,
            shape_id: shape_id,
            display_on_card: item.settings.display_on_card,
            class: class,
            odd_even: odd_even,
            index: forloop.index0,
            products_per_row_mobile: section.settings.products_per_row_mobile,
            enable_quick_buy: section.settings.enable_quick_buy,
            loading: loading,
            preload: preload,
            sizes: sizes,
            will_transform: will_transform
          -%}
        </li>
      {%- else -%}
        {% for i in (1..4) %}
          <li class="{% if layout == 'carousel' %}splide__slide {{ mobile_slide_width }}{% endif %}">
            {%- liquid
              if settings.product_tiles_scatter
                if layout == 'carousel'
                  capture class
                    cycle '-translate-y-4 ', 'translate-y-4 '
                  endcapture
                else
                  capture class
                    case item.settings.products_per_row_mobile
                      when '2'
                        cycle 'max-lg:-translate-y-4 ', 'max-lg:translate-y-4 '
                    endcase
                    case item.settings.products_per_row_desktop
                      when 3
                        cycle 'lg:translate-y-4 ', 'lg:-translate-y-4 ', 'lg:translate-y-4 '
                      when 2, 4
                        cycle 'lg:-translate-y-4 ', 'lg:translate-y-4 '
                      when 5
                        cycle 'lg:translate-y-4 ', 'lg:-translate-y-4 ', 'lg:translate-y-4 ', 'lg:-translate-y-4 ', 'lg:translate-y-4 '
                    endcase
                  endcapture
                endif
              endif
              capture odd_even
                cycle 'odd', 'even'
              endcapture
              assign shape_id = item.id
              if image_shape == 'blob'
                assign shape_id = item.id | append: '-' | append: forloop.index0
              endif
            -%}
            {%- render 'product-tile',
              product: blank,
              crop: item.settings.product_tiles_aspect_ratio,
              shape: section.settings.image_shape,
              shape_id: shape_id,
              display_on_card: item.settings.display_on_card,
              class: class,
              odd_even: odd_even,
              index: forloop.index0,
              will_transform: will_transform
            -%}
          </li>
        {%- endfor -%}
      {%- endfor -%}
    </ul>
  </div>
  {%- if layout == 'carousel' -%}
    <div class="splide__arrows mt-5 flex items-center justify-between px-section">
      {%- render 'splide-navigation' %}
    </div>
    <script class="slideshow-options" type="application/json">
      {
        "mediaQuery": "min",
        "arrows": true,
        "pagination": false,
        "rewind": true,
        "autoWidth": true,
        "gap": "1.25rem",
        "focus": {{ item.settings.slideshow_focus | json }},
        "type": "loop",
        "autoScroll": {
          "autoStart": {% if item.settings.autoscroll_mode == '0' or item.settings.autoscroll_mode == blank %}false{% else %}true{% endif %},
          "speed": {% if item.settings.autoscroll_mode == blank %}0{% else %}{{ item.settings.autoscroll_mode | plus: 0 | json }}{% endif %}
        },
        "padding": {
          "left": "1.25rem",
          "right": "1.25rem"
        },
        "breakpoints": {
          "990": {
            "gap": "2.5rem",
            "padding": {
              "left": "2.5rem",
              "right": "2.5rem"
            }
          }
        }
      }
    </script>
    <style>
      @media (min-width: 990px) {
        #slideshow-{{ section.id }}-{{ index }} .splide__slide {
          width: {{ item.settings.desktop_slide_width }}%;
        }
      }
    </style>
  {%- endif -%}
</div>
